---
## This template creates staging resources for a particular service.

AWSTemplateFormatVersion: '2010-09-09'
Description: 'DOC Data Service Template - Staging Resources'

## ::METADATA::
Metadata:
  'AWS::CloudFormation::Interface':

    ParameterGroups:
    #--------------- 
      - Label: 
          default: "General Configuration"
        Parameters:
          - environment
          - serviceName
      - Label:
          default: "Encryption Configuration"
        Parameters:
          - kmsKeyARN
      - Label:
          default: "DynamoDB Capacity Configuration"
        Parameters:
          - defaultReadCapUnits
          - defaultWriteCapUnits
          - maxReadCapUnits
          - maxWriteCapUnits

    ParameterLabels:
    #---------------  
 
      # General Parameters
      environment:
        default: "Operational environment:"
      serviceName:
        default: 'Service name'    

      # Encryption Configuration

      kmsKeyARN:
        default: "Bucket Encryption KMS Key ARN:"  

      # DynamoDB Capacity Configuration

      defaultReadCapUnits:
        default: "Default DDB Read Capacity:"
      defaultWriteCapUnits:
        default: "Default DDB Write Capacity:"
      maxReadCapUnits:
        default: "Maximum DDB Read Capacity:"
      maxWriteCapUnits:
        default: "Maximum DDB Write Capacity:"

## ::PARAMETERS::
Parameters:

  # General Configuration

  environment:
    Type: String
    ConstraintDescription: 'Operational environment'
    AllowedValues:
    - 'Example'
    Default: 'Example'

  serviceName:
    Type: String
    ConstraintDescription: 'Must be between 3 - 32 characters long.'
    AllowedPattern: "^[A-Za-z0-9-]{3,32}$"
    MinLength: 3
    MaxLength: 32
    Default: 'unknownservicename'

  # Encryption Configuration

  kmsKeyARN:
    Type: String
    Description: "(Optional) If omitted, no encryption is applied."

  # DynamoDB Capacity Configuration

  defaultReadCapUnits:
    Type: Number
    Default: 5
    Description: "Default read capacity units for DynamoDB table."

  defaultWriteCapUnits:
    Type: Number
    Default: 5
    Description: "Default write capacity units for DynamoDB table."

  maxReadCapUnits:
    Type: Number
    Default: 15
    Description: "Max read capacity units for DynamoDB table."

  maxWriteCapUnits:
    Type: Number
    Default: 15
    Description: "Max write capacity units for DynamoDB table."

## ::CONDITIONS::
Conditions:
  IsExampleEnv: !Equals [!Ref environment, 'Example' ]
  HasKMSKey: !Not [!Equals [!Ref kmsKeyARN, ""]]
  CreateExampleResources: !Or [ !Equals [ !Ref environment, 'Example' ], !Equals [ !Ref environment, 'Sandpit' ] ]

## ::MAPPINGS::
Mappings:

  # Environment-Specific Config
  EnvConfig:
    Example:
      EnvToLower: 'example'
      AccountPrefix: 'exampleprefix'

## ::RESOURCES::
Resources:

  StagingTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "event_source_id"
          AttributeType: "S"
        -
          AttributeName: "event_idx"
          AttributeType: "N"
        -
          AttributeName: "project_id"
          AttributeType: "S"
        -
          AttributeName: "uploader_id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "event_source_id"
          KeyType: "HASH"
        -
          AttributeName: "event_idx"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        - IndexName: 'gsi_project_id'
          KeySchema:
            - AttributeName: 'project_id'
              KeyType: 'HASH'
          Projection:
            ProjectionType: 'ALL'
          ProvisionedThroughput:
            ReadCapacityUnits: !Ref defaultReadCapUnits
            WriteCapacityUnits: !Ref defaultWriteCapUnits
        - IndexName: 'gsi_uploader_id'
          KeySchema:
            - AttributeName: 'uploader_id'
              KeyType: 'HASH'
          Projection:
            ProjectionType: 'ALL'
          ProvisionedThroughput:
            ReadCapacityUnits: !Ref defaultReadCapUnits
            WriteCapacityUnits: !Ref defaultWriteCapUnits
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref defaultReadCapUnits
        WriteCapacityUnits: !Ref defaultWriteCapUnits
      PointInTimeRecoverySpecification: !If
        - PointInTimeRecoveryEnabled: True
        - PointInTimeRecoveryEnabled: False
      SSESpecification: !If
        - SSEEnabled: True
        - SSEEnabled: False
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      Tags:
        - Key: Environment
          Value: !Ref environment

  # TODO - Scale GSIs!!!

  # Write Capacity Scalability Target
  WriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !Ref maxWriteCapUnits
      MinCapacity: !Ref defaultWriteCapUnits
      ResourceId: !Join
        - /
        - - table
          - !Ref StagingTable
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb

  # Read Capacity Scalability Target
  ReadCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !Ref maxReadCapUnits
      MinCapacity: !Ref defaultReadCapUnits
      ResourceId: !Join
        - /
        - - table
          - !Ref StagingTable
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb

  # Service Role for Actioning Autoscaling
  ScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "dynamodb:DescribeTable"
                  - "dynamodb:UpdateTable"
                  - "cloudwatch:PutMetricAlarm"
                  - "cloudwatch:DescribeAlarms"
                  - "cloudwatch:GetMetricStatistics"
                  - "cloudwatch:SetAlarmState"
                  - "cloudwatch:DeleteAlarms"
                Resource: "*"

  # Write Scaling Policy
  WriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref WriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  # Read Scaling Policy
  ReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

## SSM PARAMETERS

  # Staging Table Name
  StagingTableName:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: !Sub "Name of the DynamoDB staging table for the ${serviceName} service in the ${environment} environment"
      Name: !Sub
        - '/${env}/${service}/dynamo/staging-table/name'
        - {
          env: !FindInMap [ EnvConfig, !Ref environment, EnvToLower ],
          service: !Ref serviceName
          }
      Type: 'String'
      Value: !Ref 'StagingTable'
      # Tag Config
      Tags:        
        Service: !Sub '${serviceName}'
        Environment: !Ref environment  

  # Staging Table ARN
  StagingTableArn:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: !Sub "ARN of the DynamoDB staging table for the ${serviceName} service in the ${environment} environment"
      Name: !Sub
        - '/${env}/${service}/dynamo/staging-table/arn'
        - {
          env: !FindInMap [ EnvConfig, !Ref environment, EnvToLower ],
          service: !Ref serviceName
          }
      Type: 'String'
      Value: !GetAtt 'StagingTable.Arn'
      # Tag Config
      Tags:
        Service: !Sub '${serviceName}'
        Environment: !Ref environment

## ::OUTPUTS::
Outputs:

  TemplateID:
    Description: 'Template ID'
    Value: 'datalake/structure'

  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'

  # DynamoDB Tables

  StagingTableName:
    Description: "The name of the Staging Data DDBTable"
    Value: !Ref "StagingTable"
    Export:
      Name: !Sub "${AWS::StackName}-StagingTable-Name"          

  StagingTableArn:
    Description: "The ARN of the Staging Data DDBTable"
    Value: !GetAtt "StagingTable.Arn"
    Export:
      Name: !Sub "${AWS::StackName}-StagingTable-Arn"