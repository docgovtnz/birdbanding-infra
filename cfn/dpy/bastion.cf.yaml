---
# This template creates a Bastion instance for interfacing with the RDS instance.
# You don't need a bastion in a VPN-style environment like DOC's

AWSTemplateFormatVersion: '2010-09-09'
Description: 'DOC Data Service Template - Cloudformation template to create a highly available SSH bastion host'
  
## ::METADATA::
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    #---------------    
      - Label:
          default: 'General Parameters'
        Parameters:
          - environment
          - serviceName

      - Label:
          default: 'Network Configuration'
        Parameters:
          - remoteAccessCIDR

      - Label:
          default: 'Amazon EC2 Configuration'
        Parameters:
          - keyPairName
          - bastionInstanceType
          - logsRetentionInDays
          - notificationList

      - Label:
          default: 'Linux Bastion Configuration'
        Parameters:
          - bastionTenancy
          - enableBanner
          - bastionBanner
          - enableTCPForwarding
          - enableX11Forwarding

      - Label:
          default: 'Cross References'
        Parameters:
          - referenceVpcId
          - referenceVpcCidrBlock
          - referenceVpcPublicSubnets

      - Label:
          default: 'Advanced Configuration'
        Parameters:
          - osImageOverride

    # LABELS
    ParameterLabels:
    #---------------
      # General Parameters
      serviceName:
        default: "Data Service name:"
      environment:
        default: "Environment:"

      # Network Configuration
      remoteAccessCIDR:
        default: 'Allowed Bastion External Access CIDR'
      
      # Amazon EC2 Configuration
      keyPairName:
        default: 'Key Pair Name'
      bastionInstanceType:
        default: 'Bastion Instance Type'
      logsRetentionInDays:
        default: 'Log Retention Period (Days)'
      notificationList:
        default: 'SNS Notification Email'

      # Linux Bastion Configuration
      bastionTenancy:
        default: 'Bastion Tenancy'
      enableBanner:
        default: 'Enable Banner'
      bastionBanner:
        default: 'Bastion Banner'
      enableTCPForwarding:
        default: 'Enable TCP Forwarding'
      enableX11Forwarding:
        default: 'Enable X11 Forwarding'
      
      # Cross References      
      
      referenceVpcId:
        default: "VPC ID:"
      referenceVpcCidrBlock:
        default: "VPC CIDR Block:"
      referenceVpcPublicSubnets:
        default: "VPC Public Subnets:"

      # Advanced Configuration
      osImageOverride:
        default: 'AMI ID for Override'

## ::PARAMETERS::        
Parameters:

  # General Parameters

  serviceName:
    Type: String
    ConstraintDescription: "Must be between 3 - 32 characters long."
    AllowedPattern: "^[A-Za-z0-9]{3,32}$"
    MinLength: 4
    MaxLength: 32
    Default: "unknowndataservice"

  environment:
    Type: String
    AllowedValues:
    - "Example"

    Default: "Example"


  # Network Configuration

  remoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: Allowed CIDR block in the x.x.x.x/x format for external SSH access to the bastion host
    Type: String
    
  # Amazon EC2 Configuration    

  keyPairName:
    Description: 'Enter a Public/private key pair. If you do not have one in this AWS Region, create it before continuing'
    Type: 'AWS::EC2::KeyPair::KeyName'
    
  bastionInstanceType:
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large      
    Default: t3.micro
    Description: 'Amazon EC2 instance type for the bastion instance. t2 instance types are not supported for dedicated VPC tenancy (option below).'
    Type: String

  logsRetentionInDays:
    Description: 'Specify the number of days you want to retain log events'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]    

  notificationList:
    Type: String
    Description: 'The Email notification list is used to configure a SNS topic for sending cloudwatch alarm notifications'
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: provide a valid email address.  

  # Linux Bastion Configuration

  bastionTenancy:
    Description: 'VPC Tenancy in which bastion host will be launched. Options: ''dedicated'' or ''default'''
    Type: String
    Default: default
    AllowedValues:
      - dedicated
      - default

  enableBanner:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: 'To include a banner to be displayed when connecting via SSH to the bastion, set this parameter to true'
    Type: String

  bastionBanner:
    Default: 'https://aws-quickstart.s3.amazonaws.com/quickstart-linux-bastion/scripts/banner_message.txt'
    Description: 'Banner text to display upon login. Use default or provide AWS S3 location for the file containing Banner text.'
    Type: String

  enableTCPForwarding:
    Type: String
    Description: 'Enable/Disable TCP Forwarding'
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
      
  enableX11Forwarding:
    Type: String
    Description: 'Enable/Disable X11 Forwarding'
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
      
  # Advanced Configuration

  osImageOverride:
    Description: 'Optional. Specify a region specific image to use for the instance'
    Type: String
    Default: ''
    
  # Cross References

  referenceVpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: 'Must reference a valid VPC.'

  referenceVpcCidrBlock:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: 'CIDR block parameter must be in the form x.x.x.x/x'
    Description: 'VPC CIDR block in the x.x.x.x/x format'
    Type: String

  referenceVpcPublicSubnets:
    ConstraintDescription: 'Must be a list of existing subnets'
    Description: 'VPC Public Subnets'
    Type: List<AWS::EC2::Subnet::Id>

## ::CONDITIONS::
Conditions:
  GovCloudCondition: !Equals [!Ref 'AWS::Region', 'us-gov-west-1']
  UseosImageOverride: !Not [!Equals [!Ref 'osImageOverride', '']]

## ::MAPPINGS::        
Mappings:

  AWSAMIRegionMap:
    AMI:
      AMZNLINUXHVM: amzn-ami-hvm-2018.03.0.20180811-x86_64-gp2
    ap-northeast-1:
      AMZNLINUXHVM: ami-06cd52961ce9f0d85
    ap-northeast-2:
      AMZNLINUXHVM: ami-0a10b2721688ce9d2
    ap-south-1:
      AMZNLINUXHVM: ami-0912f71e06545ad88
    ap-southeast-1:
      AMZNLINUXHVM: ami-08569b978cc4dfa10
    ap-southeast-2:
      AMZNLINUXHVM: ami-05067171f4230ac41
    ca-central-1:
      AMZNLINUXHVM: ami-0b18956f
    eu-central-1:
      AMZNLINUXHVM: ami-0233214e13e500f77
    eu-west-1:
      AMZNLINUXHVM: ami-047bb4163c506cd98
    eu-west-2:
      AMZNLINUXHVM: ami-f976839e
    eu-west-3:
      AMZNLINUXHVM: ami-0ebc281c20e89ba4b
    sa-east-1:
      AMZNLINUXHVM: ami-07b14488da8ea02a0
    us-east-1:
      AMZNLINUXHVM: ami-0ff8a91507f77f867
    us-east-2:
      AMZNLINUXHVM: ami-0b59bfac6be064b78
    us-west-1:
      AMZNLINUXHVM: ami-0bdb828fd58c52235
    us-west-2:
      AMZNLINUXHVM: ami-a0cfeed8
      
  LinuxAMINameMap:
    Amazon-Linux-HVM:
      Code: AMZNLINUXHVM
      
## ::RESOURCES::      
Resources:
  
  # Notification topic
  EC2SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: !Ref notificationList
        Protocol: email
  
  # Main Log group
  BastionMainLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref logsRetentionInDays
    
  # CloudWatch Metric Filter
  SSHMetricFilter:
    Type: 'AWS::Logs::MetricFilter'
    Properties:
      LogGroupName: !Ref BastionMainLogGroup
      FilterPattern: ON FROM USER PWD
      MetricTransformations:
        - MetricName: SSHCommandCount
          MetricValue: 1
          MetricNamespace: !Join 
            - /
            - - !Ref serviceName
              - !Ref 'AWS::StackName'

  # Security Group
  BastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: !Ref referenceVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref remoteAccessCIDR
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: !Ref remoteAccessCIDR
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-${serviceName}-BastionSecurityGroup'          

  # Bastion Host EC2 Instance Role         
  BastionHostRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:GetObject'
                Resource: !Sub 
                  - 'arn:${Partition}:s3:::aws-quickstart/quickstart-linux-bastion/*'
                  - Partition: !If 
                      - GovCloudCondition
                      - aws-us-gov
                      - aws
                Effect: Allow
          PolicyName: aws-quick-start-s3-policy
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogStream'
                  - 'logs:GetLogEvents'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutRetentionPolicy'
                  - 'logs:PutMetricFilter'
                  - 'logs:CreateLogGroup'
                Resource: !Sub 
                  - >-
                    arn:${Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*
                  - Partition: !If 
                      - GovCloudCondition
                      - aws-us-gov
                      - aws
                Effect: Allow
          PolicyName: bastion-cloudwatch-logs-policy
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'ec2:AssociateAddress'
                  - 'ec2:DescribeAddresses'
                Resource:
                  - '*'
                Effect: Allow
          PolicyName: bastion-eip-policy
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
        Version: 2012-10-17
        
  # Bastion Host EC2 Instance Profile        
  BastionHostProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref BastionHostRole
      Path: /
      
  # Elastic IP
  EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      
  # Bastion Autoscaling Group
  BastionAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: '1'
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      MaxSize: '1'
      MinSize: '0'
      Tags:
      - Key: Name
        Value: !Sub
        - '${AWS::StackName}-BastionHost-${CidrBlock}'
        - CidrBlock: !Ref referenceVpcCidrBlock
        PropagateAtLaunch: true
      NotificationConfigurations:
      - TopicARN: !Ref EC2SNSTopic
        NotificationTypes:
        - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
        - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
      VPCZoneIdentifier: !Ref referenceVpcPublicSubnets
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT10M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        PauseTime: PT10M
        SuspendProcesses:
        - HealthCheck
        - ReplaceUnhealthy
        - AZRebalance
        - AlarmNotification
        - ScheduledActions
        WaitOnResourceSignals: true        
        
  # Bastion Launch Config    
  BastionLaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref BastionHostRole
          buckets:
            - "aws-quickstart"
      'AWS::CloudFormation::Init':
        config:
          files:
            /tmp/bastion_bootstrap.sh:
              source: https://aws-quickstart.s3.amazonaws.com/quickstart-linux-bastion/scripts/bastion_bootstrap.sh
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/.psqlrc: 
              content: !Sub | 
                \set PROMPT1 '%[%033[1;31m%]%M%[%033[0m%]:%> %[%033[1;33m%]%n%[%033[0m%]@%/%R%#%x '
                \pset pager off
                \set COMP_KEYWORD_CASE upper
                \set VERBOSITY verbose
                \set HISTCONTROL ignorespace
                \set HISTFILE ~/.psql_history- :DBNAME
                \set HISTSIZE 5000
                \set version 'SELECT version();'
                \set extensions 'select * from pg_available_extensions;'
              mode: "000644"
              owner: "root"
              group: "root"            
          commands:
            b-bootstrap:
              command: !Sub './tmp/bastion_bootstrap.sh --banner ${bastionBanner} --enable ${enableBanner} --tcp-forwarding ${enableTCPForwarding} --x11-forwarding ${enableX11Forwarding}'
    Properties:
      AssociatePublicIpAddress: 'true'
      PlacementTenancy: !Ref bastionTenancy
      KeyName: !Ref keyPairName
      IamInstanceProfile: !Ref BastionHostProfile
      ImageId: !If 
        - UseosImageOverride
        - !Ref osImageOverride
        - !FindInMap 
          - AWSAMIRegionMap
          - !Ref 'AWS::Region'
          - !FindInMap 
            - LinuxAMINameMap
            - 'Amazon-Linux-HVM'
            - Code
      SecurityGroups:
        - !Ref BastionSecurityGroup
      InstanceType: !Ref bastionInstanceType
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            set -x
            export PATH=$PATH:/usr/local/bin

            which pip &> /Example/null
            if [ $? -ne 0 ] ; then
              echo "PIP NOT INSTALLED"
              [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo "PIP INSTALLED"
              [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo "PIP INSTALLED"
            fi

            pip install --upgrade pip &> /Example/null
            pip install awscli --ignore-installed six &> /Example/null

            easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

            yum install -y postgresql96 &> /Example/null
            
            EIP_LIST="${EIP}"
            CLOUDWATCHGROUP=${BastionMainLogGroup}

            yum update -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource BastionLaunchConfiguration --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource BastionAutoScalingGroup --region ${AWS::Region}

  # CloudWatch Alarms
  CPUTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average CPU utilization over last 10 minutes higher than 80%'
      Namespace: 'AWS/EC2'
      MetricName: CPUUtilization
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      AlarmActions:
      - Ref: EC2SNSTopic
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref BastionAutoScalingGroup

## ::OUTPUTS::  
Outputs:
  TemplateID:
    Description: 'Template ID'
    Value: 'VPC-SSH-Bastion'
    
  BastionAutoScalingGroup:
    Description: Auto Scaling Group Reference ID
    Value: !Ref BastionAutoScalingGroup
    Export:
      Name: !Sub '${AWS::StackName}-BastionAutoScalingGroup'
      
  EIP:
    Description: The public IP address of the SSH bastion host/instance
    Value: !Ref EIP
    Export:
      Name: !Sub '${AWS::StackName}-EIP'
      
  SSHCommand:      
    Description: SSH command line
    Value: !Join
             - ''
             - - 'ssh -i "'
               - !Ref keyPairName
               - '.pem" '
               - 'ec2-user@'
               - !Ref EIP
    
  CloudWatchLogs:
    Description: CloudWatch Logs GroupName. Your SSH logs will be stored here.
    Value: !Ref BastionMainLogGroup
    Export:
      Name: !Sub '${AWS::StackName}-CloudWatchLogs'
      
  BastionSecurityGroupID:
    Description: Use this Security Group to reference incoming traffic from the SSH bastion host/instance
    Value: !Ref BastionSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-BastionSecurityGroupID'
