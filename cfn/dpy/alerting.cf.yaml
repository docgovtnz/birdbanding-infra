---
## This template creates alerting resources

AWSTemplateFormatVersion: '2010-09-09'
Description: 'DOC Data Service - Alerting Stack'

## ::METADATA::
Metadata:
  AWS::CloudFormation::Interface:
    #---------------    
    ParameterGroups:
    - Label:
        default: 'General Parameters'
      Parameters:
      - environment
      - serviceName
    - Label:
        default: 'Alert Parameters'
      Parameters:
      - primaryEmail
      - secondaryEmail
      - httpEndpoint
      - httpsEndpoint
    - Label:
        default: 'Fallback Parameters'
      Parameters:
      - FallbackEmail

    ParameterLabels:
    #---------------  
      # General Parameters
      environment:
        default: "Operational environment:"
      serviceName:
        default: 'Service name'

      # Alert Parameters
      primaryEmail:
        default: "Primary Notification Email Address:"
      secondaryEmail:
        default: "Secondary Notification Email Address:"        
      httpEndpoint:
        default: "Notification HTTP Endpoint:"
      httpsEndpoint:
        default: "Notification HTTPS:" 
      
      # Fallback Parameters
      fallbackEmail:
        default: "Fallback Notification Email:"

## ::PARAMETERS::
Parameters:

  # General Parameters
  environment:
    Type: String
    AllowedValues:
    - 'Example'
    Default: 'Example'

  serviceName:
    Type: String
    Default: 'unknown-service'

  # Alert Parameters

  primaryEmail:
    Description: '(Optional) Primary email address that will receive alerts'
    Type: String
    Default: ''

  secondaryEmail:
    Description: '(Optional) Secondary email address that will receive alerts'
    Type: String
    Default: ''

  httpEndpoint:
    Description: '(Optional) HTTP endpoint that will receive alerts via POST requests'
    Type: String
    Default: ''

  httpsEndpoint:
    Description: '(Optional) HTTPS endpoint that will receive alerts via POST requests (can be a marbot.io endpoint)'
    Type: String
    Default: ''

  # Fallback Parameters

  fallbackEmail:
    Description: '(Optional) fallback email address that will receive alerts if alerts can not be delivered'
    Type: String
    Default: ''

## ::CONDITIONS::
Conditions:
  HasPrimaryEmail: !Not [!Equals [!Ref primaryEmail, '']]
  HasSecondaryEmail: !Not [!Equals [!Ref secondaryEmail, '']]
  HasHttpEndpoint: !Not [!Equals [!Ref httpEndpoint, '']]
  HasHttpsEndpoint: !Not [!Equals [!Ref httpsEndpoint, '']]
  HasFallbackEmail: !Not [!Equals [!Ref fallbackEmail, '']]

## ::MAPPINGS::  
Mappings:
  # Environment-Specific Config
  EnvConfig:
    Example:
      EnvToLower: 'example'
      AccountPrefix: 'exampleprefix'

## ::RESOURCES::
Resources:

  # Main Alerting Topic
  Topic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: !Sub 'Activity Returns Alert Topic ({$environment})'
  
  # Topic Policy
  TopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Id: Id1
        Version: '2012-10-17'
        Statement:
        - Sid: AllowServicesToPublish
          Effect: Allow
          Principal:
            Service:
            - 'events.amazonaws.com' # Allow CloudWatch Events
            - 's3.amazonaws.com' # Allow S3 Event Notifications
          Action: 'sns:Publish'
          Resource: !Ref Topic
        - Sid: AllowOwnerToPublish
          Effect: Allow
          Principal:
            AWS: '*' # Allow CloudWatch Alarms, ElastiCache Notifications, Elastic Beanstalk Notifications, Auto Scaling Notification
          Action: 'sns:Publish'
          Resource: !Ref Topic
          Condition:
            StringEquals:
              'AWS:SourceOwner': !Ref 'AWS::AccountId'
        - Sid: AllowSESToPublish
          Effect: Allow
          Principal:
            Service: 'ses.amazonaws.com' # Allow SES Notifications & Events
          Action: 'sns:Publish'
          Resource: !Ref Topic
          Condition:
            StringEquals:
              'AWS:Referer': !Ref 'AWS::AccountId'
      Topics:
      - !Ref Topic

  # Fallback Alerting Topic
  FallbackTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: !Sub 'Activity Returns Alert Fallback Topic ({$environment})'

  # Number Notifications Too High Alarm
  NumberOfNotificationsFailedTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Alerts could not be delivered'
      Namespace: 'AWS/SNS'
      MetricName: NumberOfNotificationsFailed
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - !Ref FallbackTopic
      Dimensions:
      - Name: TopicName
        Value: !GetAtt Topic.TopicName

  # Primary Email Subscription to alert Topic
  PrimaryEmailSubscription:
    Condition: HasPrimaryEmail
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref primaryEmail
      Protocol: email
      TopicArn: !Ref Topic

  # Secondary Email Subscription to alert Topic
  SecondaryEmailSubscription:
    Condition: HasSecondaryEmail
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref secondaryEmail
      Protocol: email
      TopicArn: !Ref Topic

  # Main HTTP Subscription to alert topic
  HttpEndpointSubscription:
    Condition: HasHttpEndpoint
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref httpEndpoint
      Protocol: http
      TopicArn: !Ref Topic

  # Main HTTPS Subscription to alert topic
  HttpsEndpointSubscription:
    Condition: HasHttpsEndpoint
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref httpsEndpoint
      Protocol: https
      TopicArn: !Ref Topic

  # Fallback Email Subscription to fallback Topic
  FallbackEmailSubscription:
    Condition: HasFallbackEmail
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref fallbackEmail
      Protocol: email
      TopicArn: !Ref FallbackTopic

## ::OUTPUTS::      
Outputs:

  TemplateID:
    Description: 'Template id'
    Value: 'prereqs/alert'
  
  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'
  
  TopicARN:
    Description: 'The ARN of the alert topic.'
    Value: !Ref Topic
    Export:
      Name: !Sub '${AWS::StackName}-TopicARN'