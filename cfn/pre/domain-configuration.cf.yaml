---
## EXECUTE ME IN NORTH VIRGINIA US-EAST-1 ONLY
## This template creates domain configuration resources.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'DOC Data Service - Pre-Requisite - Domain Configuration Stack'

## ::METADATA::
Metadata:
  AWS::CloudFormation::Interface:
    #---------------    
    ParameterGroups:
    - Label:
        default: 'General Parameters'
      Parameters:
      - environment
      - serviceName

    ParameterLabels:
    #---------------  
      # General Parameters
      environment:
        default: "Operational environment:"
      serviceName:
        default: 'Service name'

## ::PARAMETERS::
Parameters:

  # General Parameters
  environment:
    Type: String
    AllowedValues:
    - 'Example'
    Default: 'Example'

  serviceName:
    Type: String
    Default: 'unknown-service'

## ::CONDITIONS::
Conditions: {}

## ::MAPPINGS::  
Mappings:
  # Environment-Specific Config
  EnvConfig:
    Example:
      EnvToLower: 'example'
      AccountPrefix: 'exampleprefix'
      DomainPrefix: 'example.'

## ::RESOURCES::
Resources:

  # The main domain certificate.
  # NOTE: THIS STACK MUST BE CREATED IN NORTH VIRGINIA US-EAST-1
  # NOTE: This stack will remain in a CREATE_IN_PROGRESS state
  # until the certificate is validated by PSS. That basically
  # means you don't want to include it in a CI/CD pipeline
  # unless the PSS dudes know about it up front!
  DomainCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties: 
      DomainName: !Sub 
        - '*.${env}${service}.example.org'
        - { 
            env: !FindInMap [ EnvConfig, !Ref environment, DomainPrefix ],
            service: !Ref serviceName
          }
      SubjectAlternativeNames: 
        - !Sub 
          - '${env}${service}.example.org'
          - { 
              env: !FindInMap [ EnvConfig, !Ref environment, DomainPrefix ],
              service: !Ref serviceName
            }
      ValidationMethod: 'DNS'
      # Tag Config
      Tags:              
      - Key: Environment
        Value: !Ref 'environment'      

  # Certificate ARN for use elsewhere
  DomainCertificateArn:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: !Sub "ARN of the ACM certificate for the ${serviceName} service in the ${environment} environment"
      Name: !Sub
        - '/${env}/${service}/acm/certificate/arn'
        - {
          env: !FindInMap [ EnvConfig, !Ref environment, EnvToLower ],
          service: !Ref serviceName
          }
      Type: 'String'
      Value: !Ref DomainCertificate
      # Tag Config
      Tags:        
        Service: !Sub '${serviceName}'
        Environment: !Ref environment

## ::OUTPUTS::      
Outputs:

  TemplateID:
    Description: 'Template id'
    Value: 'prereqs/alert'
  
  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'
  
  # ---

  DomainName:
    Description: 'Domain name for this service'
    Value: !Sub 
      - '${env}${service}.example.org'
      - { 
          env: !FindInMap [ EnvConfig, !Ref environment, DomainPrefix ],
          service: !Ref serviceName
        }
    Export:
      Name: !Sub '${AWS::StackName}-DomainCertificate-ARN'

  DomainCertificateArn:
    Description: 'ACM Certificate ARN for this service'
    Value: !Ref DomainCertificate
    Export:
      Name: !Sub '${AWS::StackName}-Domain-Name'