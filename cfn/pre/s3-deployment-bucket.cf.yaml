---
## This template creates an S3 bucket.
## The template contains the ability to define a bucket policy that locks down access
## to only specific Users and Roles within this account. However, if we get it wrong,
## the bucket will become inaccessible to anyone except root! Too dangerous here, better
## to manage elsewhere.

AWSTemplateFormatVersion: '2010-09-09'
Description: 'S3 bucket for (Serverless) Deployments'

## ::METADATA::
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups: 
    #---------------
      - Label:
          default: "Logging Configuration"
        Parameters:  
          - logBucketName 
      - 
        Label:
          default: "Lifecycle Configuration"
        Parameters:
          - CurrentTransToGlacierAfter
          - NonCurrentTransToGlacierAfter               

    ParameterLabels:
    #---------------
      # Logging Configuration
      logBucketName:
        default: "Name of logging bucket:"

      # Lifecycle Configuration
      CurrentTransToGlacierAfter:
        default: "Period before transitioning current objects to Glacier (days):"
      NonCurrentTransToGlacierAfter:
        default: "Period before transitioning non-current objects to Glacier (days):"

## ::PARAMETERS::
## Template parameters to be configured by user
Parameters:

  # General Configuration

  # Log Bucket Name

  logBucketName:
    Type: String
    Default: ''

  # Lifecycle Configuration

  CurrentTransToGlacierAfter:
    Type: Number
    ConstraintDescription: "Must be an integer value between 30 and 3660."
    MinValue: 30
    MaxValue: 3660
    Default: 365

  NonCurrentTransToGlacierAfter:
    Type: Number
    ConstraintDescription: "Must be an integer value between 30 and 3660."
    MinValue: 30
    MaxValue: 3660
    Default: 365

## ::CONDITIONS::
Conditions:
  HasLoggingBucketName: !Not [ !Equals [ !Ref logBucketName, '' ] ]

## ::MAPPINGS::     
Mappings: {}

## ::RESOURCES::
Resources:

  # ++++++++++++++++++++++++++++++
  # BUCKET
  # ++++++++++++++++++++++++++++++

  # Deployment Bucket
  DeploymentBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: 'Delete'
    Properties:
      BucketName: 'doc-serverlessdeploymentbucket-tools'
      # Bucket Encryption
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          -
            ServerSideEncryptionByDefault:
              # KMSMasterKeyID:  TODO - Using default KMS key unless specified
              SSEAlgorithm: 'aws:kms'
      # Versioning Config
      VersioningConfiguration:
        Status: Enabled
      # Lifecycle Config
      LifecycleConfiguration:
        Rules:
          -
            Status: 'Enabled'
            Id: 'glacier-archival-rule'
            Transitions:
              -
                StorageClass: 'GLACIER'
                TransitionInDays: !Ref 'CurrentTransToGlacierAfter'
            NoncurrentVersionTransitions:
              -
                StorageClass: 'GLACIER'
                TransitionInDays: !Ref 'NonCurrentTransToGlacierAfter'
      # Logging Config
      LoggingConfiguration: !If
        - HasLoggingBucketName
        - DestinationBucketName: !Ref 'logBucketName'
          LogFilePrefix: 'doc-serverlessdeploymentbucket-tools'
        - !Ref "AWS::NoValue"
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: True
      # Tag Config
      Tags:              
      - Key: Environment
        Value: 'Tools'

## ::OUTPUTS::
## Outputs useful in other templates
Outputs:

  # ++++++++++++++++++++++++++++++
  # BUCKET
  # ++++++++++++++++++++++++++++++

  DeploymentBucket:
    Value: !Ref DeploymentBucket
    Export:
      Name: !Sub '${AWS::StackName}-DeploymentBucket-Name'

  DeploymentBucketArn:
    Value: !GetAtt DeploymentBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-DeploymentBucket-ARN'