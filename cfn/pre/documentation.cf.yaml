---
## This template creates an S3 bucket for API documentation hosting purposes.
## The template can be configured in multiple ways via parameters

AWSTemplateFormatVersion: '2010-09-09'
Description: 'DOC Data Service Template - API Documentation S3 Bucket'

## ::METADATA::
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups: 
    #---------------
      - Label: 
          default: "General Configuration"
        Parameters:
          - environment
          - serviceName
      - Label:
          default: "Logging Configuration"
        Parameters:  
          - logBucketName

    ParameterLabels:
    #---------------  
      # Logging Configuration
      logBucketName:
        default: "Full name of logging bucket:"

## ::PARAMETERS::
## Template parameters to be configured by user
Parameters:

  # General Configuration

  environment:
    Type: String
    ConstraintDescription: 'Operational environment'
    AllowedValues:
    - 'Example'
    Default: 'Example'

  serviceName:
    Type: String
    ConstraintDescription: 'Must be between 3 - 32 characters long.'
    AllowedPattern: "^[A-Za-z0-9-]{3,32}$"
    MinLength: 3
    MaxLength: 32
    Default: 'unknownservicename'

  # Log Bucket Name

  logBucketName:
    Type: String
    ConstraintDescription: 'Must be between 3 - 63 characters long. The bucket must already exist.'
    # AllowedPattern: "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d\\.]$"
    MaxLength: 63
    Default: ''

## ::CONDITIONS::
Conditions:
  IsExampleEnv: !Equals [!Ref environment, 'Example' ]
  HasLoggingBucket: !Not [!Equals [ !Ref logBucketName, '' ]]
  IsNotExampleEnv: !Not [!Equals [ !Ref environment, 'Example' ]]

## ::MAPPINGS::  
Mappings:
  # Environment-Specific Config
  EnvConfig:
    Example:
      EnvToLower: 'example'
      AccountPrefix: 'exampleprefix'

## ::RESOURCES::
Resources:

  # ++++++++++++++++++++++++++++++
  # BUCKET
  # ++++++++++++++++++++++++++++++

  # Single-Page Application Bucket
  DocumentationBucket:
    Type: AWS::S3::Bucket
    Properties:
      # Versioning Config
      VersioningConfiguration:
        Status: Enabled
      # Logging Config
      LoggingConfiguration: !If
        - HasLoggingBucket
        - DestinationBucketName: !Ref 'logBucketName'
          LogFilePrefix: !Sub 
          - '${env}-${service}-api-documentation-bucket'
          - { 
              env: !FindInMap [ EnvConfig, !Ref environment, EnvToLower ],
              service: !Ref serviceName
            }     
        - !Ref AWS::NoValue
      # Tag Config
      Tags:              
      - Key: Environment
        Value: !Ref 'environment'

  # Documentation Bucket Name
  DocumentationBucketName:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: "Name of the bucket hosting the API documentation "
      Name: !Sub
        - '/${env}/${service}/documentation/bucket/name'
        - {
          env: !FindInMap [ EnvConfig, !Ref environment, EnvToLower ],
          service: !Ref serviceName
          }
      Type: 'String'
      Value: !Ref DocumentationBucket
      # Tag Config
      Tags:              
        Environment: !Ref 'environment'

  # Documentation Bucket ARN
  DocumentationBucketArn:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: "ARN of the bucket hosting the API documentation"
      Name: !Sub
        - '/${env}/${service}/documentation/bucket/arn'
        - {
          env: !FindInMap [ EnvConfig, !Ref environment, EnvToLower ],
          service: !Ref serviceName
          }
      Type: 'String'
      Value: !GetAtt DocumentationBucket.Arn
      # Tag Config
      Tags:              
        Environment: !Ref 'environment'

## ::OUTPUTS::
## Outputs useful in other templates
Outputs:

  TemplateID:
    Description: 'Template id'
    Value: 'docs/s3'
  
  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'

  # ++++++++++++++++++++++++++++++
  # BUCKET
  # ++++++++++++++++++++++++++++++

  DocumentationBucket:
    Value: !Ref DocumentationBucket
    Export:
      Name: !Sub '${AWS::StackName}-DocumentationBucket-Name'
      
  DocumentationBucketArn:
    Value: !GetAtt DocumentationBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-DocumentationBucket-ARN'
